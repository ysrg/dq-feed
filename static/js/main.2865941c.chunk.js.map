{"version":3,"sources":["features/card/Card.module.css","features/header/Header.module.css","features/card/Cardlist.module.css","assets lazy /^/.//bm_.*/.png$/ groupOptions: {} namespace object","features/card/cardListSlice.js","features/header/Header.js","features/pagination/Pagination.js","features/card/Card.js","features/card/CardList.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","cardListSlice","createSlice","name","initialState","favList","fullCardList","reducers","add","state","action","push","payload","remove","filter","i","fill","backup","addToFullList","removeMainListItems","mainCard","substr","toLowerCase","searchResults","item","headline","includes","summary","actions","selectCards","cardListFavs","cardList","Header","useState","value","setValue","dispatch","useSelector","useDispatch","className","styles","header","headerLeft","to","headerMenu","headerInput","onChange","target","type","placeholder","usePagination","data","itemsPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","length","next","min","prev","max","jump","page","pageNumber","currentData","begin","end","slice","Card","post","index","favCards","src","setSrc","useEffect","a","indexOf","default","console","error","loadImage","input","date","Date","datetime","month","toLocaleString","DOW","getDate","style","App__card","App__card__main","backgroundImage","image","inner","latest","related","onClick","window","open","url","substring","footer","ln","bk","alt","React","memo","posts","postsList","renderCard","key","main","left","App__cardlist","App","history","useHistory","favPosts","setPage","initCardList","favCardList","pageCount","location","pathname","_DATA","fetch","response","json","Pagination","count","size","variant","shape","p","configureStore","reducer","cardListReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2865941c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App__card\":\"Card_App__card__2qzX5\",\"App__card__main\":\"Card_App__card__main__BJUa3\",\"inner\":\"Card_inner__2Qqlo\",\"related\":\"Card_related__WjVP0\",\"latest\":\"Card_latest__2GzHL\",\"date\":\"Card_date__3JXf4\",\"bk\":\"Card_bk__2mAar\",\"ln\":\"Card_ln__18cZf\",\"summary\":\"Card_summary__hhRel\",\"footer\":\"Card_footer__3vLin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15j4c\",\"headerLeft\":\"Header_headerLeft__IidzB\",\"headerInput\":\"Header_headerInput__1X4_x\",\"headerMenu\":\"Header_headerMenu__3Fta6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App__cardlist\":\"Cardlist_App__cardlist__qwRHR\",\"main\":\"Cardlist_main__3Osoa\",\"left\":\"Cardlist_left__36eTa\"};","var map = {\n\t\"./bm_empty.png\": [\n\t\t58,\n\t\t3\n\t],\n\t\"./bm_full.png\": [\n\t\t59,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 56;\nmodule.exports = webpackAsyncContext;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const cardListSlice = createSlice({\n  name: 'cardList',\n  initialState: {\n    favList: [],\n    fullCardList: [],\n  },\n  reducers: {\n    add: (state, action) => {\n      state.favList.push(action.payload)\n    },\n    remove: (state, action) => {\n      state.favList = state.favList.filter(i => i.id !== action.payload.id)\n    },\n    fill: (state, action) => {\n      state.fullCardList = state.backup = action.payload\n    },\n    addToFullList: (state, action) => {\n      state.fullCardList.push(action.payload)\n    },\n    removeMainListItems: (state, action) => {\n      const mainCard = state.fullCardList[0]; // main card should be visible still\n      const substr = action.payload.toLowerCase();\n      const searchResults = state.backup.filter((item) => {\n        return item.headline?.toLowerCase().includes(substr)\n          || item.summary?.toLowerCase().includes(substr)\n      })\n      state.fullCardList = [mainCard, ...searchResults]\n\n    },\n  },\n});\n\nexport const { add, remove, fill, removeMainListItems, addToFullList } = cardListSlice.actions;\n\nexport const selectCards = state => {\n  return state.cardListFavs.favList;\n}\nexport const cardList = state => {\n  return state.cardListFavs.fullCardList;\n}\n\nexport default cardListSlice.reducer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cardList, removeMainListItems } from \"../card/cardListSlice\";\n\nimport styles from \"./Header.module.css\";\n\nexport const Header = () => {\n  const [value, setValue] = useState(\"\");\n  const cards = useSelector(cardList);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    // @to-do add debounce\n    dispatch(removeMainListItems(e.target.value));\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.headerLeft}>\n        <Link to=\"/\">\n          <h3 className={styles.headerMenu}>News</h3>\n        </Link>\n        <Link to=\"/favs\">\n          <h3 className={styles.headerMenu}>Bookmarks</h3>\n        </Link>\n      </div>\n      <div className={styles.headerInput}>\n        <input\n          onChange={handleChange}\n          value={value}\n          type=\"search\"\n          placeholder=\"Search\"\n        />\n      </div>\n    </header>\n  );\n};\n","import React, { useState } from \"react\";\n\nfunction usePagination(data, itemsPerPage) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / itemsPerPage);\n\n  function currentData() {\n    const begin = (currentPage - 1) * itemsPerPage;\n    const end = begin + itemsPerPage;\n    return [data[0], ...data.slice(begin + 1, end)];\n  }\n\n  function next() {\n    setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\n  }\n\n  function prev() {\n    setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\n  }\n\n  function jump(page) {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage((currentPage) => Math.min(pageNumber, maxPage));\n  }\n\n  return { next, prev, jump, currentData, currentPage, maxPage };\n}\n\nexport default usePagination;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCards, add, remove } from \"./cardListSlice\";\nimport PropTypes from \"prop-types\";\n\nimport style from \"./Card.module.css\";\n\nconst truncate = (input) =>\n  input.length > 100 ? `${input.substring(0, 100)}...` : input;\n\nconst Card = ({ post, index }) => {\n  const favCards = useSelector(selectCards);\n  const dispatch = useDispatch();\n  const [src, setSrc] = useState(\"\");\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        const { default: src } = await import(\n          `../../assets/bm_${\n            favCards.indexOf(post) !== -1 ? \"full\" : \"empty\"\n          }.png`\n        );\n        setSrc(src);\n      } catch (err) {\n        console.error(\"failed to load icon\");\n      }\n    };\n    loadImage();\n  }, [favCards, post]);\n\n  const bmClick = () => {\n    if (favCards.indexOf(post) === -1) dispatch(add(post));\n    else dispatch(remove(post));\n  };\n  const cardClick = () => {\n    window.open(post.url, \"_blank\");\n  };\n\n  const date = new Date(post.datetime);\n  const month = date.toLocaleString(\"en-us\", { month: \"short\" });\n  const DOW = date.getDate();\n  return (\n    <div\n      className={`${style.App__card} ${\n        index === 0 ? style.App__card__main : \"\"\n      }`}\n      style={{ backgroundImage: `url(${post.image}` }}\n    >\n      <div className={style.inner}>\n        {index === 0 ? <div className={style.latest}>Latest News</div> : null}\n        <div className={style.related}>{post.related}</div>\n        <h3 onClick={cardClick}>{post.headline}</h3>\n        <div className={style.summary}>{truncate(post.summary)}</div>\n        <div className={style.footer}>\n          <div className={style.date}>{`${month} ${DOW}`}</div>\n          <div className={style.ln}>Open</div>\n          {index === 0 ? (\n            \"\"\n          ) : (\n            <div className={style.bk}>\n              <img onClick={bmClick} src={src} alt=\"\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  index: PropTypes.number,\n};\n\nexport default Card;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { cardList } from \"./cardListSlice\";\nimport Card from \"./Card\";\nimport styles from \"./Cardlist.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst CardList = ({ posts }) => {\n  const postsList = useSelector(cardList);\n  const renderCard = (post, index) => {\n    if (post) return <Card index={index} key={post.id} post={post} />;\n    return null;\n  };\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.left}>{renderCard(posts[0], 0)}</div>\n      <div className={styles.App__cardlist}>\n        {posts.map((post, index) => {\n          if (postsList.indexOf(post) > 0) return renderCard(post, index);\n          return null;\n        })}\n      </div>\n    </div>\n  );\n};\n\nCardList.propTypes = {\n  posts: PropTypes.array,\n};\n\nexport default React.memo(CardList);\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Pagination } from \"@material-ui/lab\";\n\nimport { Header } from \"./features/header/Header\";\nimport usePagination from \"./features/pagination/Pagination\";\nimport \"./App.css\";\nimport CardList from \"./features/card/CardList\";\nimport {\n  selectCards,\n  add,\n  fill,\n  cardList,\n} from \"./features/card/cardListSlice\";\n\nfunction App() {\n  const history = useHistory();\n  const posts = useSelector(cardList);\n  const favPosts = useSelector(selectCards);\n  let PER_PAGE = 7;\n  let [page, setPage] = useState(1);\n  const initCardList = usePagination(posts, PER_PAGE),\n    favCardList = usePagination(favPosts, PER_PAGE);\n  const pageCount =\n    history.location.pathname === \"/favs\"\n      ? Math.ceil(favPosts.length / PER_PAGE)\n      : Math.ceil(posts.length / PER_PAGE);\n  const _DATA =\n    history.location.pathname === \"/favs\" ? favCardList : initCardList;\n\n  const handleChange = (e, p) => {\n    setPage(p);\n    _DATA.jump(p);\n  };\n\n  const favCards = useSelector(selectCards);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetch(\n      \"https://finnhub.io/api/v1/company-news?symbol=AAPL&from=2020-01-01&token=bto0mm748v6v7atie760\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(fill(data));\n        dispatch(add(data[0]));\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <CardList posts={_DATA.currentData()} />\n      <div className=\"pagination\">\n        <Pagination\n          count={pageCount}\n          size=\"large\"\n          page={page}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cardListReducer from \"../features/card/cardListSlice\";\n\nexport default configureStore({\n  reducer: {\n    cardListFavs: cardListReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <Switch>\n          <Route path=\"/\" component={App} />\n          <Route />\n        </Switch>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}